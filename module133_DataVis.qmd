---
title: "1.3.3: Data Visualization"
subtitle: "(Asynchronous-Online)"
bibliography: ./packages.bib
nocite: |
  @*
format:
  html: default
  pdf: default
editor_options: 
  chunk_output_type: console
---

\thispagestyle{fancy}

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE,
                      error = TRUE,
                      message = FALSE,
                      warning = FALSE)
```

## Session Objectives

1. To visualize data using different R packages.

Key points to cover:

1. Introduce to ggplot2 and other R packages.
2. Visualize one, two, or more variables at a time.
3. Introduce other resources (e.g., books, blogs, or websites) trainees can refer to.

---

## 0. Prework - Before You Begin

If you do not have them already, install the following packages from CRAN:

* [`ggplot2](https://cloud.r-project.org/web/packages/ggplot2/)
* [`ggthemes`](https://cloud.r-project.org/web/packages/ggthemes/)
* [`readr`](https://cloud.r-project.org/web/packages/readr/)

Download the small training dataset:

* [`mydata.csv`](mydata.csv) - right click and "SaveAs" to download this datafile to your computer - see ["Module 1.3.2: Data Wrangling"](module132_DataWrangling.html#to-read-in-data.)

Import the data into your R computing session:

* Here is the code to read the data into your computing session:

```{r}
library(readr)
readr::read_csv("mydata.csv")
```

* Get Inspired at [The R Graph Gallery](https://r-graph-gallery.com/)

---

\newpage

## 1. Base R graphical functions

The base R `graphics` package is very powerful on its own. As you saw in [1.3.1: Introduction to R and R Studio](module131_IntroRRStudio.html), we can make a simple 2-dimensional scatterplot with the `plot()` function.

For example, let's make a plot of `Height` on the X-axis (horizontal) and `WeightPRE` on the Y-axis (vertical) from the `mydata` dataset. Since we are using base R function, we have to use the `$`selector to identify the variables we want inside the `mydata` dataset.

Learn more about the `plot()` function and arguments by running `help(plot, package = "graphics")`.

```{r}
plot(x = mydata$Height,
     y = mydata$WeightPRE)
```


The plot does look a little odd - this is due to some data errors in the `mydata` dataset. We will fix these below. But for now, you can "see" that these data may have some issues that need to be addressed. For example:

* There are 2 people with heights < 5 feet tall which may be suspect
* There are 2 people with a weight < 100 pounds which may be data entry errors or incorrect units

For now, let's add some additional graphical elements:

* a better label for the x-axis
* a better label for the y-axis
* a title for the graph
* a subtitle for the graph

```{r}
plot(x = mydata$Height,
     y = mydata$WeightPRE,
     xlab = "Height (in decimal inches)",
     ylab = "",
     main = "",
     sub = "")
```




---

\newpage

## 2. ggplot2 package



---

\newpage

## 3. Get boilerplate code to start

### R Gallery


### R Graphics Cookbook






---

\newpage

```{r echo=FALSE}
knitr::write_bib(x = c(.packages()), 
                 file = "packages.bib")
```

## References

::: {#refs}
:::

## Other Helpful Resources

[**Other Helpful Resources**](./additionalResources.html)

